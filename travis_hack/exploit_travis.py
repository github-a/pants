from __future__ import (absolute_import, division, generators, nested_scopes, print_function,
                        unicode_literals, with_statement)

import copy
import yaml


def main():
  def chunks(l, n):
    """Yield successive n-sized chunks from l."""
    for i in range(0, len(l), n):
      yield l[i:i + n]

  travis_yml = None
  with open(".travis.yml", 'r') as stream:
    try:
      travis_yml = yaml.load(stream)
      print(travis_yml)
    except yaml.YAMLError as exc:
      print(exc)

  if travis_yml is None:
    exit(1)

  matrix = travis_yml['env']['matrix']

  chunks = list(chunks(matrix, 5))

  new_configs = []

  for chunk in chunks:
    new_config = copy.deepcopy(travis_yml)
    new_config['env']['matrix'] = chunk
    new_configs.append(new_config)

  for idx, config in enumerate(new_configs):
    with open('{}_config.yml'.format(idx), 'w') as outfile:
      outfile.write(yaml.dump(config, default_flow_style=True))


  exit(0)


if __name__ == '__main__':
  main()
